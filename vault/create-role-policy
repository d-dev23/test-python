import requests
import json

# Креды
VAULT_URL = 'http://127.0.0.1:8200'
VAULT_TOKEN = 'myroot'

# Имя политики и описание 
policy_name = 'policy'
policy_description = 'Закинул сюда все че было'

# Правила для политики
policy_rules = """
path "secret/*" {
  capabilities = ["create", "read", "update", "patch", "delete", "list"]
}

path "secret/super-secret" {
  capabilities = ["deny"]
}

path "secret/restricted" {
  capabilities = ["create"]
  allowed_parameters = {
    "foo" = []
    "bar" = ["zip", "zap"]
  }
}
"""
# Создание политики
policy_payload = {
    "policy": policy_rules,
    "description": policy_description,
}

response = requests.put(
    f"{VAULT_URL}/v1/sys/policies/acl/{policy_name}",
    headers={"X-Vault-Token": VAULT_TOKEN},
    data=json.dumps(policy_payload)
)

if response.status_code == 204:
    print(f"Политика '{policy_name}' успешно создана в Vault.")
else:
    print(f"Не удалось создать политику. Код состояния: {response.status_code}")

# переменные для  роли и привязка политики
role_name = 'role-ujw'
assigned_policy = 'policy'

# синтаксис ключа
role_pravila = '''
{
    "auth":{
        "client_token":"myroot",
        "accessor":"0e9e354a-520f-df04-6867-ee81cae3d42d",
        "policies":[
            "policy",
        ],
        "lease_duration":2764800,
        "renewable":true
    },
    ...
}

'''
role_payload = {
    "policies": role_pravila,
}

response = requests.post(
    f"{VAULT_URL}/v1/auth/approle/role/{role_name}",
    headers={"X-Vault-Token": VAULT_TOKEN},
    data=json.dumps(role_payload)
)

if response.status_code == 204:
    print(f"Роль '{role_name}' успешно создана и назначена политика '{assigned_policy}'.")
else:
    print(f"Не удалось создать роль. Код состояния: {response.status_code}")
